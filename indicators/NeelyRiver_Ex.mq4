/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2008, steffen@neowave.com"
#property link      ""

#property indicator_chart_window
#property indicator_buffers 2
#property indicator_color1 Black
#property indicator_color2 Black

#import "nrt2008_090828m.dll"
   int MT4TradeAdd(string a0, int a1, double a2, double a3, double a4, double a5, int a6, int a7, bool a8);
   double TS2k_GetElement(string a0, int a1, int a2, int a3);
   double TS2k_connect(string a0, string a1, int a2, bool a3);
   double TS2k_GetChannelValue(string a0, int a1, int a2, int a3, int a4);
   int TS2k_SetElement(string a0, int a1, double a2);
   double GetPreciseValue(string a0, int a1, int a2, double a3, int a4);
#import


double gd_76 = 10.0;
double gd_84 = 5.0;


bool SmallSignal = true;
bool LargeSignal = false;
 bool ActiveVisulTest = true;
//extern---------------------
 bool useGlennsTimes = FALSE;
 bool LOCisOldest = FALSE;
 bool enableLargeLines = TRUE;
 bool addLOCText = FALSE;
 bool elementLabels = TRUE;
 bool addPriceTags = TRUE;
 color colorBars = White;
 int widthBars = 2;
 int WindowHeight = 400;
 bool useEndTime = FALSE;
 datetime endtime = D'01.01.2009 02:00';
 color colorTime = Brown;
 color colorPrice = Purple;
 color colorBias = Blue;
 color colorChannel = White;
//extern---------------------


int gi_136;
string gs_140;
string gs_148;
bool gi_156;
int g_timeframe_160;
int g_timeframe_164;
int g_count_168;
int gi_unused_172;
int gi_unused_176;
int g_count_180;
int g_count_184;
int gi_unused_188;
int g_count_192;
int gi_unused_196;
int gi_204 = 1;
int g_count_208 = 1;
int gi_212 = 1;
int gi_unused_216 = 1;
int gi_unused_220 = 1;
int gi_unused_224 = 1;
int gi_unused_228 = 1;
int gi_unused_232 = 1;
int gi_unused_236 = 1;
int g_period_240 = 30;
double g_ibuf_244[];
double g_ibuf_248[];


double g_ticksize_268;
int gi_276;
int gi_280;
int gi_284;
int gi_288;
int gi_292;
int gi_296;
int gi_300;
int gi_304;
string g_name_308;
string g_name_316;
string g_name_324;
string g_name_332;
string g_name_340;
int g_count_348;
int g_count_352;
int g_count_356;
int gi_360;
int gi_unused_364 = 0;

int init() {
   InitParames();
   return (0);
}

void InitParames(){
   string ls_8;
   string ls_16;
   gi_276 = 0;
   if (Bars > 1000) gi_276 = Bars - 1000;
   
   g_ticksize_268 = MarketInfo(Symbol(), MODE_TICKSIZE);
   gi_136 = WindowHandle(Symbol(), Period()) % 100000;
   g_timeframe_164 = Period();
   string ls_0 = Symbol() + gi_136 + "x";
   IndicatorBuffers(2);
   IndicatorShortName("NRT()");
   SetIndexStyle(0, DRAW_LINE);
   SetIndexBuffer(0, g_ibuf_244);
   SetIndexLabel(0, "Bar High");
   SetIndexStyle(1, DRAW_LINE);
   SetIndexBuffer(1, g_ibuf_248);
   SetIndexLabel(1, "Bar Low");
   gs_140 = ls_0 + DoubleToStr(Period(), 0) + "#" + gi_136;
   gs_148 = gs_140;
   gi_156 = FALSE;
   gi_284 = 0;
   gi_296 = 0;
   if (Period() == PERIOD_M1 || Period() == PERIOD_M1) {
      g_timeframe_160 = 15;
      g_timeframe_164 = 3;
      gs_148 = ls_0 + DoubleToStr(12.0, 0) + "#" + gi_136;
      gs_140 = ls_0 + DoubleToStr(3, 0) + "#" + gi_136;
      gi_156 = TRUE;
      ls_8 = "1min";
      ls_16 = "15min";
      if (useGlennsTimes) {
         gi_284 = 3;
         gi_296 = 12;
         ls_8 = "3min";
         ls_16 = "12min";
      }
   }
   if (Period() == PERIOD_M5) {
      g_timeframe_160 = 60;
      g_timeframe_164 = 12;
      gs_148 = ls_0 + DoubleToStr(58.0, 0) + "#" + gi_136;
      gs_140 = ls_0 + DoubleToStr(12, 0) + "#" + gi_136;
      gi_156 = TRUE;
      ls_8 = "5min";
      ls_16 = "60min";
      if (useGlennsTimes) {
         gi_284 = 12;
         gi_296 = 58;
         ls_8 = "12min";
         ls_16 = "58min";
      }
   }
   if (Period() == PERIOD_M15) {
      g_timeframe_160 = 60;
      g_timeframe_164 = 12;
      gs_148 = ls_0 + DoubleToStr(58.0, 0) + "#" + gi_136;
      gs_140 = ls_0 + DoubleToStr(12, 0) + "#" + gi_136;
      gi_156 = TRUE;
      ls_8 = "15min";
      ls_16 = "60min";
      if (useGlennsTimes) {
         gi_284 = 12;
         gi_296 = 58;
         ls_8 = "12min";
         ls_16 = "58min";
      }
   }
   if (Period() == PERIOD_M30) {
      g_timeframe_160 = 240;
      g_timeframe_164 = 58;
      gs_148 = ls_0 + DoubleToStr(288.0, 0) + "#" + gi_136;
      gs_140 = ls_0 + DoubleToStr(58, 0) + "#" + gi_136;
      gi_156 = TRUE;
      ls_8 = "30min";
      ls_16 = "240min";
      if (useGlennsTimes) {
         gi_284 = 58;
         gi_296 = 288;
         ls_8 = "58min";
         ls_16 = "288min";
      }
   }
   if (Period() == PERIOD_H1) {
      g_timeframe_160 = 240;
      g_timeframe_164 = 58;
      gs_148 = ls_0 + DoubleToStr(288.0, 0) + "#" + gi_136;
      gs_140 = ls_0 + DoubleToStr(58, 0) + "#" + gi_136;
      gi_156 = TRUE;
      ls_8 = "60min";
      ls_16 = "240min";
      if (useGlennsTimes) {
         gi_284 = 58;
         gi_296 = 288;
         ls_8 = "58min";
         ls_16 = "288min";
      }
   }
   if (Period() == PERIOD_H4) {
      g_timeframe_160 = 1440;
      g_timeframe_164 = 288.0;
      gs_140 = ls_0 + DoubleToStr(288.0, 0) + "#" + gi_136;
      gs_148 = ls_0 + DoubleToStr(0, 0) + "#" + gi_136;
      ls_8 = "240min";
      ls_16 = "daily";
      gi_156 = TRUE;
      if (useGlennsTimes) {
         gi_156 = TRUE;
         gi_284 = 288;
         ls_8 = "288min";
         ls_16 = "daily";
      }
   }
   if (Period() == PERIOD_D1) {
      g_timeframe_160 = 10080;
      g_timeframe_164 = 0;
      gs_140 = ls_0 + DoubleToStr(0, 0) + "#" + gi_136;
      gs_148 = ls_0 + DoubleToStr(-1, 0) + "#" + gi_136;
      gi_156 = TRUE;
      ls_8 = "daily";
      ls_16 = "weekly";
   }
   if (Period() == PERIOD_W1) {
      g_timeframe_160 = 43200;
      g_timeframe_164 = -1;
      gs_140 = ls_0 + DoubleToStr(-1, 0) + "#" + gi_136;
      gs_148 = ls_0 + DoubleToStr(-2, 0) + "#" + gi_136;
      gi_156 = TRUE;
      ls_8 = "weekly";
      ls_16 = "monthly";
   }
   gi_292 = iTime(Symbol(), PERIOD_M1, iBars(Symbol(), PERIOD_M1) - 1);
   gi_288 = 0;
   gi_304 = iTime(Symbol(), PERIOD_M1, iBars(Symbol(), PERIOD_M1) - 1);
   gi_300 = 0;
   if (enableLargeLines == FALSE) gi_156 = FALSE;
   MT4TradeAdd(gs_140, 0, 0, 0, 0, 0, 0, 0, 1);
   if (gi_156) MT4TradeAdd(gs_148, 0, 0, 0, 0, 0, 0, 0, 1);
   TS2k_SetElement(gs_140, 10, g_ticksize_268);
   TS2k_SetElement(gs_140, 11, 276);
   TS2k_SetElement(gs_140, 12, 0.3333);
   TS2k_SetElement(gs_148, 10, g_ticksize_268);
   TS2k_SetElement(gs_148, 11, 276);
   TS2k_SetElement(gs_148, 12, 0.3333);
   if (TS2k_connect(gs_140, ls_0, g_timeframe_164, 0) != 1.0) gi_156 = FALSE;
   g_count_168 = 0;
   gi_unused_172 = 0;
   gi_unused_176 = 0;
   g_count_180 = 0;
   g_count_184 = 0;
   gi_unused_188 = 0;
   gi_unused_196 = 0;
   g_count_192 = 0;
   gi_unused_216 = 1;
   gi_unused_220 = 1;
   gi_unused_224 = 1;
   gi_204 = 1;
   g_count_208 = 1;
   gi_212 = 1;
   g_count_348 = 0;
   g_count_352 = 0;
   g_count_356 = 0;
   gi_360 = 0;
   if (gi_284 > 0) {
      if (iBars(Symbol(), PERIOD_M1) / gi_284 > 500) gi_288 = iBars(Symbol(), PERIOD_M1) - 500 * gi_284;
      gi_292 = iTime(Symbol(), PERIOD_M1, iBars(Symbol(), PERIOD_M1) - 1 - gi_288);
   }
   if (gi_296 > 0) {
      if (iBars(Symbol(), PERIOD_M1) / gi_296 > 200) gi_300 = iBars(Symbol(), PERIOD_M1) - 200 * gi_296;
      gi_304 = iTime(Symbol(), PERIOD_M1, iBars(Symbol(), PERIOD_M1) - 1 - gi_300);
   }
   g_count_184++;
   string l_name_24 = "Text" + g_count_184;
   ObjectCreate(l_name_24, OBJ_LABEL, 0, 0, 0);
   ObjectSet(l_name_24, OBJPROP_XDISTANCE, 0);
   ObjectSet(l_name_24, OBJPROP_YDISTANCE, 15);
   ObjectSetText(l_name_24, "NRT" + ls_8 + "==>" + ls_16, 10, "Arial", LightGray);
   g_count_184++;
   g_name_308 = "Text" + g_count_184;
   ObjectCreate(g_name_308, OBJ_LABEL, 0, 0, 0);
   ObjectSet(g_name_308, OBJPROP_XDISTANCE, 0);
   ObjectSet(g_name_308, OBJPROP_YDISTANCE, 30);
   ObjectSetText(g_name_308, "NRT" + ls_8 + "==>" + ls_16, 10, "Arial", LightGray);
   g_count_184++;
   g_name_316 = "Text" + g_count_184;
   ObjectCreate(g_name_316, OBJ_LABEL, 0, 0, 0);
   ObjectSet(g_name_316, OBJPROP_XDISTANCE, 0);
   ObjectSet(g_name_316, OBJPROP_YDISTANCE, 45);
   ObjectSetText(g_name_316, "", 10, "Arial", LightGray);
   g_count_184++;
   g_name_324 = "Text" + g_count_184;
   ObjectCreate(g_name_324, OBJ_LABEL, 0, 0, 0);
   ObjectSet(g_name_324, OBJPROP_XDISTANCE, 0);
   ObjectSet(g_name_324, OBJPROP_YDISTANCE, 60);
   ObjectSetText(g_name_324, "", 10, "Arial", LightGray);
   g_count_184++;
   g_name_332 = "Text" + g_count_184;
   ObjectCreate(g_name_332, OBJ_LABEL, 0, 0, 0);
   ObjectSet(g_name_332, OBJPROP_XDISTANCE, 0);
   ObjectSet(g_name_332, OBJPROP_YDISTANCE, 80);
   ObjectSetText(g_name_332, "", 10, "Arial", LightGray);
   g_count_184++;
   g_name_340 = "Text" + g_count_184;
   ObjectCreate(g_name_340, OBJ_LABEL, 0, 0, 0);
   ObjectSet(g_name_340, OBJPROP_XDISTANCE, 0);
   ObjectSet(g_name_340, OBJPROP_YDISTANCE, 95);
   ObjectSetText(g_name_340, "", 10, "Arial", LightGray);
}

void DeleteObjects(){
   while (g_count_184 > 0) {
      if (ObjectFind("Text" + g_count_184) > -1) ObjectDelete("Text" + g_count_184);
      g_count_184--;
   }
   while (g_count_168 > 0) {
      if (ObjectFind("Line" + g_count_168) > -1) ObjectDelete("Line" + g_count_168);
      g_count_168--;
   }
   while (g_count_192 > 0) {
      if (ObjectFind("TextA" + g_count_192) > -1) ObjectDelete("TextA" + g_count_192);
      g_count_192--;
   }
   while (g_count_180 > 0) {
      if (ObjectFind("LineA" + g_count_180) > -1) ObjectDelete("LineA" + g_count_180);
      g_count_180--;
   }
   while (gi_212 > 0) {
      if (ObjectFind("LineBar" + gi_212) > -1) ObjectDelete("LineBar" + gi_212);
      gi_212--;
   }
   while (g_count_208 > 0) {
      if (ObjectFind("LineML" + g_count_208) > -1) ObjectDelete("LineML" + g_count_208);
      g_count_208--;
   }
   while (g_count_348 > 0) {
      if (ObjectFind("LinePriceDot" + g_count_348) > -1) ObjectDelete("LinePriceDot" + g_count_348);
      g_count_348--;
   }
   while (g_count_352 > 0) {
      if (ObjectFind("LineBiasDot" + g_count_352) > -1) ObjectDelete("LineBiasDot" + g_count_352);
      g_count_352--;
   }
   while (g_count_356 > 0) {
      if (ObjectFind("LineTimeDot" + g_count_356) > -1) ObjectDelete("LineTimeDot" + g_count_356);
      g_count_356--;
   }
}

int deinit() {
   DeleteObjects();
   return (0);
}

void addSmallBar(int ai_0) {
   if (gi_284 == 0) {
      MT4TradeAdd(gs_140, Bars - ai_0 - gi_276, Open[ai_0], High[ai_0], Low[ai_0], Close[ai_0], Time[ai_0] + 0 * Period(), 0, 1);
      return;
   }
   for (int li_4 = iBars(Symbol(), PERIOD_M1) - 1 - gi_288; li_4 >= iBarShift(Symbol(), PERIOD_M1, Time[ai_0] + 60 * Period()); li_4--) {
      if (iTime(Symbol(), PERIOD_M1, li_4) >= gi_292 + 60 * gi_284 || iTime(Symbol(), PERIOD_M1, li_4) > iTime(Symbol(), PERIOD_M1, li_4 + 1) + 1700) {
         if (iTime(Symbol(), PERIOD_M1, li_4) >= gi_292 + 60 * gi_284 + 1800) gi_292 = iTime(Symbol(), PERIOD_M1, li_4);
         else gi_292 += 60 * gi_284;
      }
      MT4TradeAdd(gs_140, 1, iOpen(Symbol(), PERIOD_M1, li_4), iHigh(Symbol(), PERIOD_M1, li_4), iLow(Symbol(), PERIOD_M1, li_4), iClose(Symbol(), PERIOD_M1, li_4), gi_292 - 0 * Period(), 0, 0);
      gi_288 = iBars(Symbol(), PERIOD_M1) - li_4 - 1;
   }
}

void addLargeBar(int ai_0) {
   int li_4;
   if (gi_296 == 0) {
      li_4 = ai_0;
      if (gi_156) {
         MT4TradeAdd(gs_148, iBars(Symbol(), g_timeframe_160) - li_4 - gi_280, iOpen(Symbol(), g_timeframe_160, li_4), iHigh(Symbol(), g_timeframe_160, li_4), iLow(Symbol(), g_timeframe_160, li_4), iClose(Symbol(), g_timeframe_160, li_4), iTime(Symbol(), g_timeframe_160, li_4) +
            60 * g_timeframe_160 - 60 * Period(), 0, 1);
      }
   } else {
      for (li_4 = iBars(Symbol(), PERIOD_M1) - 1 - gi_300; li_4 >= 0; li_4--) {
         if (iTime(Symbol(), PERIOD_M1, li_4) >= gi_304 + 60 * gi_296 || iTime(Symbol(), PERIOD_M1, li_4) > iTime(Symbol(), PERIOD_M1, li_4 + 1) + 1700) {
            if (iTime(Symbol(), PERIOD_M1, li_4) >= gi_304 + 60 * gi_296 + 1800) gi_304 = iTime(Symbol(), PERIOD_M1, li_4);
            else gi_304 += 60 * gi_296;
         }
         MT4TradeAdd(gs_148, 1, iOpen(Symbol(), PERIOD_M1, li_4), iHigh(Symbol(), PERIOD_M1, li_4), iLow(Symbol(), PERIOD_M1, li_4), iClose(Symbol(), PERIOD_M1, li_4), gi_304 +
            60 * gi_296 - 60 * Period(), 0, 0);
         gi_300 = iBars(Symbol(), PERIOD_M1) - li_4 - 1;
      }
   }
}

int start() {
   //InitParames();
   //DeleteObjects();
   
   int li_12;
   int li_16;
   string l_name_24;
   int l_datetime_32;
   double ld_36;
   double l_price_44;
   double l_price_52;
   int li_60;
   int li_64;
   int l_datetime_68;
   double ld_72;
   int li_80;
   int l_datetime_84;
   double ld_88;
   double ld_96;
   double ld_104;
   string l_dbl2str_112;
   bool li_120;
   int l_index_124;
   string l_name_128;
   int li_136;
   int li_140;
   int li_144;
   int li_148;
   string lsa_152[6];
   double lda_156[6];
   int lia_160[6];
   int l_datetime_164;
   double l_price_168;
   double ld_176;
   double ld_184;
   int l_datetime_192;
   double l_price_196;
   int li_unused_204;
   double ld_208;
   int l_datetime_216;
   double l_price_220;
   double ld_228;
   double ld_236;
   double ld_244;
   double ld_252;
   int l_datetime_260;
   int li_264;
   bool li_268;
   bool li_272;
   color l_color_276;
   string l_text_280;
   double l_iatr_0 = iATR(Symbol(), Period(), g_period_240, 0);
   int l_ind_counted_8 = 0;
   if (ActiveVisulTest){
      deinit();
      init();
   }else{      
      l_ind_counted_8 = IndicatorCounted();
      if (l_ind_counted_8 == 0) {
         deinit();
         init();
      }
   }
   if (TimeCurrent() > gi_360) {
      gi_360 = TimeCurrent() + 1;
      gd_76 = 20.0 * ((WindowPriceMax() - WindowPriceMin()) / Point / WindowHeight);
      gd_84 = 10.0 * ((WindowPriceMax() - WindowPriceMin()) / Point / WindowHeight);
      gd_76 = 2.0 * (100.0 * (l_iatr_0 / WindowHeight)) / Point;
      gd_84 = 1.0 * (100.0 * (l_iatr_0 / WindowHeight)) / Point;
      while (g_count_192 > 0) {
         if (ObjectFind("TextA" + g_count_192) > -1) ObjectDelete("TextA" + g_count_192);
         g_count_192--;
      }
      while (g_count_180 > 0) {
         if (ObjectFind("LineA" + g_count_180) > -1) ObjectDelete("LineA" + g_count_180);
         g_count_180--;
      }
      li_16 = Bars - 1 - l_ind_counted_8;
      if (useEndTime == FALSE) endtime = Time[0];
      if (l_ind_counted_8 == 0) {
         li_16 -= gi_276;
         gi_280 = 0;
         if (iBars(Symbol(), g_timeframe_160) > 200) gi_280 = iBars(Symbol(), g_timeframe_160) - 200 - iBarShift(Symbol(), g_timeframe_160, Time[li_16]);
         if (gi_156 || 0)
            if (gi_296 == 0) 
            for (int li_20 = iBars(Symbol(), g_timeframe_160) - 1 - gi_280; li_20 >= iBarShift(Symbol(), g_timeframe_160, endtime); li_20--) 
               addLargeBar(li_20);
         if (gi_284 == 0) {
            while (li_16 >= iBarShift(Symbol(), Period(), endtime)) {
               addSmallBar(li_16);
               li_16--;
            }
         }
         if (useEndTime) {
            for (li_16 = iBarShift(Symbol(), Period(), endtime) - 1; li_16 >= 0; li_16--) {
               g_count_168++;
               l_name_24 = "Line" + g_count_168;
               if (ObjectFind(l_name_24) > -1) ObjectDelete(l_name_24);
               if (!ObjectCreate(l_name_24, OBJ_TREND, 0, Time[li_16], High[li_16], Time[li_16], Low[li_16])) Print("error: can\'t create line_object! code #", GetLastError() + l_name_24);
               ObjectSet(l_name_24, OBJPROP_RAY, FALSE);
               ObjectSet(l_name_24, OBJPROP_WIDTH, widthBars);
               ObjectSet(l_name_24, OBJPROP_COLOR, Black);
            }
         }
      }
      if (useEndTime == FALSE) {
         addLargeBar(1);
         addSmallBar(1);
         addLargeBar(0);
         addSmallBar(0);
      }
      if (gi_212 > 0) gi_212--;
      li_60 = TS2k_GetElement(gs_140, 0, 0, 0);
      li_12 = li_60 - 1;
      while (gi_212 <= li_12) {
         l_datetime_32 = TS2k_GetElement(gs_140, 0, 1, gi_212);
         ld_36 = TS2k_GetElement(gs_140, 0, 2, gi_212);
         l_price_44 = TS2k_GetElement(gs_140, 0, 11, gi_212);
         l_price_52 = TS2k_GetElement(gs_140, 0, 12, gi_212);
         gi_212++;
         if (useGlennsTimes) {
            l_name_24 = "LineBar" + gi_212;
            if (ObjectFind(l_name_24) > -1) ObjectDelete(l_name_24);
            if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, l_datetime_32, l_price_52)) Print("error: can\'t create line_object! code #", GetLastError() + l_name_24);
            ObjectSet(l_name_24, OBJPROP_RAY, FALSE);
            ObjectSet(l_name_24, OBJPROP_WIDTH, widthBars);
            ObjectSet(l_name_24, OBJPROP_COLOR, colorBars);
         }
         g_ibuf_244[iBarShift(Symbol(), Period(), l_datetime_32)] = l_price_44;
         g_ibuf_248[iBarShift(Symbol(), Period(), l_datetime_32)] = l_price_52;
      }
      if (g_count_208 > 1) g_count_208 -= 2;
      else g_count_208 = 0;
      li_64 = TS2k_GetElement(gs_140, 1, 0, 0);
      li_12 = li_64 - 1;
      while (g_count_208 < li_12) {
         l_datetime_32 = TS2k_GetElement(gs_140, 1, 1, g_count_208);
         ld_36 = TS2k_GetElement(gs_140, 1, 2, g_count_208);
         l_price_44 = TS2k_GetElement(gs_140, 1, 3, g_count_208);
         g_count_208++;
         l_datetime_68 = TS2k_GetElement(gs_140, 1, 1, g_count_208);
         ld_72 = TS2k_GetElement(gs_140, 1, 2, g_count_208);
         l_price_52 = TS2k_GetElement(gs_140, 1, 3, g_count_208);
         l_name_24 = "LineML" + g_count_208;
         if (ObjectFind(l_name_24) > -1) ObjectDelete(l_name_24);
         if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, l_datetime_68, l_price_52)) Print("error: can\'t create line_object! code #", GetLastError() + l_name_24);
         ObjectSet(l_name_24, OBJPROP_RAY, FALSE);
         ObjectSet(l_name_24, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_24, OBJPROP_COLOR, Gray);
      }
      li_80 = TS2k_GetElement(gs_140, 2, 0, 0);
      while (gi_204 < li_80 - 1) {
         gi_204++;
         l_datetime_84 = TS2k_GetElement(gs_140, 2, 1, gi_204);
         ld_88 = TS2k_GetElement(gs_140, 2, 3, gi_204);
         ld_96 = TS2k_GetElement(gs_140, 2, 4, gi_204);
         ld_104 = TS2k_GetElement(gs_140, 2, 5, gi_204);
         if (MathFloor(ld_96) == ld_96) l_dbl2str_112 = DoubleToStr(ld_96, 0);
         else l_dbl2str_112 = DoubleToStr(ld_96, 1);
         li_120 = FALSE;
         l_index_124 = TS2k_GetElement(gs_140, 3, 41, TS2k_GetElement(gs_140, 2, 40, gi_204));
         li_120 = TS2k_GetElement(gs_140, 3, 6, l_index_124);
         g_count_184++;
         l_name_128 = "Text" + g_count_184;
         if (ld_104 > 0.0) {
            ObjectCreate(l_name_128, OBJ_TEXT, 0, l_datetime_84, ld_88 + gd_76 * Point);
            if (li_120 == TRUE) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Green);
            else {
               if (li_120 == 2 || li_120 == -2) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Yellow);
               else ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", LightGray);
            }
         } else {
            ObjectCreate(l_name_128, OBJ_TEXT, 0, l_datetime_84, ld_88 - gd_84 * Point);
            if (li_120 == -1) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Red);
            else {
               if (li_120 == 2 || li_120 == -2) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Yellow);
               else ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", LightGray);
            }
         }
      }
      l_datetime_84 = TS2k_GetElement(gs_140, 1, 1, g_count_208);
      ld_88 = TS2k_GetElement(gs_140, 1, 3, g_count_208);
      ld_96 = TS2k_GetElement(gs_140, 1, 4, g_count_208);
      ld_104 = TS2k_GetElement(gs_140, 1, 5, g_count_208);
      if (MathFloor(ld_96) == ld_96) l_dbl2str_112 = DoubleToStr(ld_96, 0);
      else l_dbl2str_112 = DoubleToStr(ld_96, 1);
      li_120 = FALSE;
      l_index_124 = TS2k_GetElement(gs_140, 3, 0, 0);
      if (l_index_124 > 1) {
         li_120 = TS2k_GetElement(gs_140, 3, 6, l_index_124 - 1);
         g_count_192++;
         l_name_128 = "TextA" + g_count_192;
         if (ld_104 > 0.0) {
            ObjectCreate(l_name_128, OBJ_TEXT, 0, l_datetime_84, ld_88 + gd_76 * Point);
            if (li_120 == TRUE) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Green);
            else {
               if (li_120 == 2 || li_120 == -2) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Yellow);
               else ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", LightGray);
            }
         } else {
            ObjectCreate(l_name_128, OBJ_TEXT, 0, l_datetime_84, ld_88 - gd_84 * Point);
            if (li_120 == -1) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Red);
            else {
               if (li_120 == 2 || li_120 == -2) ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", Yellow);
               else ObjectSetText(l_name_128, l_dbl2str_112, 10, "Arial", LightGray);
            }
         }
      }
      li_136 = TS2k_GetElement(gs_140, 6, 50, -1);
      li_140 = TS2k_GetElement(gs_140, 6, 51, -1);
      if (LOCisOldest) li_144 = li_136;
      else li_144 = li_140;
      l_datetime_32 = TS2k_GetElement(gs_140, 5, 1, -1);
      l_price_44 = TS2k_GetElement(gs_140, 5, 3, -1);
      g_count_180++;
      l_name_24 = "LineA" + g_count_180;
      if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, Time[0], l_price_44)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
      ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DOT);
      ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
      for (l_index_124 = 0; l_index_124 < li_148 && lda_156[l_index_124] != l_price_44; l_index_124++) {
      }
      if (l_index_124 == li_148) {
         li_148++;
         lsa_152[l_index_124] = " ";
         lda_156[l_index_124] = l_price_44;
         lia_160[l_index_124] = colorBias;
      }
      if (li_144 == 5) {
         if (elementLabels) {
            if (addLOCText) lsa_152[l_index_124] = " b(sLOC)" + lsa_152[l_index_124];
            else lsa_152[l_index_124] = " b" + lsa_152[l_index_124];
         } else
            if (addLOCText) lsa_152[l_index_124] = " sLOC" + lsa_152[l_index_124];
         lia_160[l_index_124] = colorBias;
         ObjectSet(l_name_24, OBJPROP_WIDTH, 3);
      } else {
         if (elementLabels) lsa_152[l_index_124] = lsa_152[l_index_124] + "b ";
         ObjectSet(l_name_24, OBJPROP_WIDTH, 1);
      }
      ObjectSet(l_name_24, OBJPROP_COLOR, colorBias);
      l_datetime_32 = TS2k_GetElement(gs_140, 4, 1, -1);
      l_price_44 = TS2k_GetElement(gs_140, 4, 3, -1);
      g_count_180++;
      l_name_24 = "LineA" + g_count_180;
      if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, Time[0], l_price_44)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
      ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DOT);
      ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
      for (l_index_124 = 0; l_index_124 < li_148 && lda_156[l_index_124] != l_price_44; l_index_124++) {
      }
      if (l_index_124 == li_148) {
         li_148++;
         lsa_152[l_index_124] = " ";
         lda_156[l_index_124] = l_price_44;
         lia_160[l_index_124] = colorPrice;
      }
      if (li_144 == 4) {
         if (elementLabels) {
            if (addLOCText) lsa_152[l_index_124] = " p(sLOC)" + lsa_152[l_index_124];
            else lsa_152[l_index_124] = " p" + lsa_152[l_index_124];
         } else
            if (addLOCText) lsa_152[l_index_124] = " sLOC" + lsa_152[l_index_124];
         lia_160[l_index_124] = colorPrice;
         ObjectSet(l_name_24, OBJPROP_WIDTH, 3);
      } else {
         if (elementLabels) lsa_152[l_index_124] = lsa_152[l_index_124] + "p ";
         ObjectSet(l_name_24, OBJPROP_WIDTH, 1);
      }
      ObjectSet(l_name_24, OBJPROP_COLOR, colorPrice);
      l_datetime_32 = TS2k_GetElement(gs_140, 3, 1, -1);
      l_price_44 = TS2k_GetElement(gs_140, 3, 3, -1);
      g_count_180++;
      l_name_24 = "LineA" + g_count_180;
      if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, Time[0], l_price_44)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
      ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DOT);
      ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
      for (l_index_124 = 0; l_index_124 < li_148 && lda_156[l_index_124] != l_price_44; l_index_124++) {
      }
      if (l_index_124 == li_148) {
         li_148++;
         lsa_152[l_index_124] = " ";
         lda_156[l_index_124] = l_price_44;
         lia_160[l_index_124] = colorTime;
      }
      if (li_144 == 3) {
         if (elementLabels) {
            if (addLOCText) lsa_152[l_index_124] = " t(sLOC)" + lsa_152[l_index_124];
            else lsa_152[l_index_124] = " t" + lsa_152[l_index_124];
         } else
            if (addLOCText) lsa_152[l_index_124] = " sLOC" + lsa_152[l_index_124];
         lia_160[l_index_124] = colorTime;
         ObjectSet(l_name_24, OBJPROP_WIDTH, 3);
      } else {
         if (elementLabels) lsa_152[l_index_124] = lsa_152[l_index_124] + "t ";
         ObjectSet(l_name_24, OBJPROP_WIDTH, 1);
      }
      ObjectSet(l_name_24, OBJPROP_COLOR, colorTime);
      if (gi_156) {
         li_136 = TS2k_GetElement(gs_148, 6, 50, -1);
         li_140 = TS2k_GetElement(gs_148, 6, 51, -1);
         if (LOCisOldest) li_144 = li_136;
         else li_144 = li_140;
         l_datetime_164 = 0;
         l_datetime_32 = TS2k_GetElement(gs_148, 5, 1, -1);
         l_price_44 = TS2k_GetElement(gs_148, 5, 3, -1);
         l_datetime_32 = GetPreciseValue(gs_140, l_datetime_32, 0, l_price_44, 1);
         g_count_180++;
         l_name_24 = "LineA" + g_count_180;
         if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, Time[0], l_price_44)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
         ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DASH);
         ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
         for (l_index_124 = 0; l_index_124 < li_148 && lda_156[l_index_124] != l_price_44; l_index_124++) {
         }
         if (l_index_124 == li_148) {
            li_148++;
            lsa_152[l_index_124] = " ";
            lda_156[l_index_124] = l_price_44;
            lia_160[l_index_124] = colorBias;
         }
         if (li_144 == 5) {
            if (elementLabels) {
               if (addLOCText) lsa_152[l_index_124] = " B(lLOC)" + lsa_152[l_index_124];
               else lsa_152[l_index_124] = " B" + lsa_152[l_index_124];
            } else
               if (addLOCText) lsa_152[l_index_124] = " lLOC" + lsa_152[l_index_124];
            lia_160[l_index_124] = colorBias;
            ObjectSet(l_name_24, OBJPROP_WIDTH, 6);
            l_datetime_164 = l_datetime_32;
         } else {
            if (elementLabels) lsa_152[l_index_124] = lsa_152[l_index_124] + "B ";
            ObjectSet(l_name_24, OBJPROP_WIDTH, 1);
         }
         ObjectSet(l_name_24, OBJPROP_COLOR, colorBias);
         l_datetime_32 = TS2k_GetElement(gs_148, 4, 1, -1);
         l_price_44 = TS2k_GetElement(gs_148, 4, 3, -1);
         l_datetime_32 = GetPreciseValue(gs_140, l_datetime_32, 0, l_price_44, 1);
         g_count_180++;
         l_name_24 = "LineA" + g_count_180;
         if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, Time[0], l_price_44)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
         ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DASH);
         ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
         for (l_index_124 = 0; l_index_124 < li_148 && lda_156[l_index_124] != l_price_44; l_index_124++) {
         }
         if (l_index_124 == li_148) {
            li_148++;
            lsa_152[l_index_124] = " ";
            lda_156[l_index_124] = l_price_44;
            lia_160[l_index_124] = colorPrice;
         }
         if (li_144 == 4) {
            if (elementLabels) {
               if (addLOCText) lsa_152[l_index_124] = " P(lLOC)" + lsa_152[l_index_124];
               else lsa_152[l_index_124] = " P" + lsa_152[l_index_124];
            } else
               if (addLOCText) lsa_152[l_index_124] = " lLOC" + lsa_152[l_index_124];
            lia_160[l_index_124] = colorPrice;
            ObjectSet(l_name_24, OBJPROP_WIDTH, 6);
            l_datetime_164 = l_datetime_32;
         } else {
            if (elementLabels) lsa_152[l_index_124] = lsa_152[l_index_124] + "P ";
            ObjectSet(l_name_24, OBJPROP_WIDTH, 1);
         }
         ObjectSet(l_name_24, OBJPROP_COLOR, colorPrice);
         if (MathAbs(TS2k_GetElement(gs_148, 3, 6, -1)) == 1.0) {
            l_datetime_32 = TS2k_GetElement(gs_148, 3, 1, -1);
            l_price_44 = TS2k_GetElement(gs_148, 3, 3, -1);
            l_datetime_32 = GetPreciseValue(gs_140, l_datetime_32, 0, l_price_44, 1);
            g_count_180++;
            l_name_24 = "LineA" + g_count_180;
            if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, Time[0], l_price_44)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
            ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DASH);
            ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
            for (l_index_124 = 0; l_index_124 < li_148 && lda_156[l_index_124] != l_price_44; l_index_124++) {
            }
            if (l_index_124 == li_148) {
               li_148++;
               lsa_152[l_index_124] = " ";
               lda_156[l_index_124] = l_price_44;
               lia_160[l_index_124] = colorTime;
            }
            if (li_144 == 3) {
               if (elementLabels) {
                  if (addLOCText) lsa_152[l_index_124] = " T(lLOC)" + lsa_152[l_index_124];
                  else lsa_152[l_index_124] = " T" + lsa_152[l_index_124];
               } else
                  if (addLOCText) lsa_152[l_index_124] = " lLOC" + lsa_152[l_index_124];
               lia_160[l_index_124] = colorTime;
               ObjectSet(l_name_24, OBJPROP_WIDTH, 6);
               l_datetime_164 = l_datetime_32;
            } else {
               if (elementLabels) lsa_152[l_index_124] = lsa_152[l_index_124] + "T ";
               ObjectSet(l_name_24, OBJPROP_WIDTH, 1);
            }
            ObjectSet(l_name_24, OBJPROP_COLOR, colorTime);
         }
         l_price_168 = TS2k_GetElement(gs_148, 7, 14, -1);
         g_count_180++;
         l_name_24 = "LineA" + g_count_180;
         if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_164, l_price_168, Time[0], l_price_168)) 
               Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
               
         ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DASH);
         ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
         ObjectSet(l_name_24, OBJPROP_WIDTH, 1);
         ObjectSet(l_name_24, OBJPROP_COLOR, Yellow);
//TODO:1
         if (TS2k_GetElement(gs_140, 9, 0, 0) > 0.0) {
            ld_176 = TS2k_GetElement(gs_140, 9, 4, -1);
            ld_184 = TS2k_GetElement(gs_140, 9, 3, -1);
            l_datetime_192 = TS2k_GetElement(gs_140, 9, 10, -1);
            l_price_196 = TS2k_GetElement(gs_140, 9, 12, -1);
            li_unused_204 = TS2k_GetElement(gs_140, 9, 20, -1);
            ld_208 = TS2k_GetElement(gs_140, 9, 22, -1);
            l_datetime_216 = TS2k_GetElement(gs_140, 9, 30, -1);
            l_price_220 = TS2k_GetElement(gs_140, 9, 32, -1);
            g_count_180++;
            l_name_24 = "LineA" + g_count_180;
            if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_192, l_price_196, l_datetime_216, l_price_220)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
            ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
            ObjectSet(l_name_24, OBJPROP_WIDTH, 3);
            ObjectSet(l_name_24, OBJPROP_COLOR, colorChannel);
            g_count_180++;
            l_name_24 = "LineA" + g_count_180;
            if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_192, l_price_196 + ld_176, l_datetime_216, l_price_220 + ld_176)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
            ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
            ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DASH);
            ObjectSet(l_name_24, OBJPROP_COLOR, colorChannel);
            ld_228 = 0.75;
            ld_236 = 0.25;
            ld_244 = TS2k_GetChannelValue(gs_140, -1, 0, -1, 1);
            ld_252 = ((TS2k_GetElement(gs_140, 0, 11, -1) + TS2k_GetElement(gs_140, 0, 12, -1)) / 2.0 - ld_244) / ld_176;
            if (ld_252 > 0.75) ld_236 = 1.125;
            if (ld_252 < 0.25) ld_228 = -0.125;
            if (ld_252 > 1.25) {
               ld_228 = 1.9;
               ld_236 = 0;
            }
            if (ld_252 < -0.25) {
               ld_228 = -0.9;
               ld_236 = 0;
            }
            if (ld_228 != 0.0) {
               g_count_180++;
               l_name_24 = "LineA" + g_count_180;
               if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_192, l_price_196 + ld_176 * ld_228, l_datetime_216, l_price_220 + ld_176 * ld_228)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
               ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
               ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DOT);
               ObjectSet(l_name_24, OBJPROP_COLOR, colorChannel);
            }
            if (ld_236 != 0.0) {
               g_count_180++;
               l_name_24 = "LineA" + g_count_180;
               if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_192, l_price_196 + ld_176 * ld_236, l_datetime_216, l_price_220 + ld_176 * ld_236)) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
               ObjectSet(l_name_24, OBJPROP_RAY, TRUE);
               ObjectSet(l_name_24, OBJPROP_STYLE, STYLE_DOT);
               ObjectSet(l_name_24, OBJPROP_COLOR, colorChannel);
            }
            l_datetime_260 = TS2k_GetElement(gs_148, 6, 61, -1);
            l_datetime_260 = GetPreciseValue(gs_140, l_datetime_260, 0, TS2k_GetElement(gs_148, 6, 63, -1), 1);
            g_count_180++;
            l_name_24 = "LineA" + g_count_180;
            if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_260, TS2k_GetElement(gs_148, 6, 63, -1), l_datetime_260, TS2k_GetElement(gs_148, 6, 63, -1))) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
            ObjectSet(l_name_24, OBJPROP_WIDTH, 15);
            ObjectSet(l_name_24, OBJPROP_COLOR, White);
         }
      }
      for (l_index_124 = 0; l_index_124 < li_148; l_index_124++) {
         g_count_180++;
         l_name_24 = "LineA" + g_count_180;
         g_count_192++;
         l_name_128 = "TextA" + g_count_192;
         ObjectCreate(l_name_128, OBJ_TEXT, 0, Time[0], lda_156[l_index_124]);
         if (addPriceTags) lsa_152[l_index_124] = "         " + lsa_152[l_index_124] + DoubleToStr(lda_156[l_index_124], Digits);
         for (li_12 = StringLen(lsa_152[l_index_124]); li_12 > 0; li_12--) lsa_152[l_index_124] = " " + lsa_152[l_index_124];
         ObjectSetText(l_name_128, lsa_152[l_index_124], 11, "Arial", lia_160[l_index_124]);
      }
      g_count_180++;
      l_name_24 = "LineA" + g_count_180;
      l_datetime_260 = TS2k_GetElement(gs_140, 6, 61, -1);
      if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_260, TS2k_GetElement(gs_140, 6, 63, -1), l_datetime_260, TS2k_GetElement(gs_140, 6, 63, -1))) Print("error: can\'t create text_object! code #", GetLastError() + l_name_24);
      ObjectSet(l_name_24, OBJPROP_WIDTH, 10);
      ObjectSet(l_name_24, OBJPROP_COLOR, colorChannel);
      if (g_count_348 > 1) g_count_348--;
      else g_count_348 = 1;
      li_12 = TS2k_GetElement(gs_140, 4, 0, 0) - 1.0;
      while (g_count_348 < li_12) {
         if (TS2k_GetElement(gs_140, 4, 6, g_count_348) != TS2k_GetElement(gs_140, 4, 6, g_count_348 + 1)) {
            l_datetime_32 = TS2k_GetElement(gs_140, 4, 31, g_count_348 + 1);
            ld_36 = TS2k_GetElement(gs_140, 4, 32, g_count_348 + 1);
            l_price_44 = TS2k_GetElement(gs_140, 4, 3, g_count_348);
            l_name_24 = "LinePriceDot" + g_count_348;
            if (ObjectFind(l_name_24) > -1) ObjectDelete(l_name_24);
            if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, l_datetime_32, l_price_44)) Print("error: can\'t create line_object! code #", GetLastError() + l_name_24);
            ObjectSet(l_name_24, OBJPROP_RAY, FALSE);
            ObjectSet(l_name_24, OBJPROP_WIDTH, 8);
            ObjectSet(l_name_24, OBJPROP_COLOR, colorPrice);
         }
         g_count_348++;
      }
      if (g_count_352 > 1) g_count_352--;
      else g_count_352 = 1;
      li_12 = TS2k_GetElement(gs_140, 5, 0, 0) - 1.0;
      while (g_count_352 < li_12) {
         if (TS2k_GetElement(gs_140, 5, 6, g_count_352) != TS2k_GetElement(gs_140, 5, 6, g_count_352 + 1)) {
            l_datetime_32 = TS2k_GetElement(gs_140, 5, 31, g_count_352 + 1);
            ld_36 = TS2k_GetElement(gs_140, 5, 32, g_count_352 + 1);
            l_price_44 = TS2k_GetElement(gs_140, 5, 3, g_count_352);
            l_name_24 = "LineBiasDot" + g_count_352;
            if (ObjectFind(l_name_24) > -1) ObjectDelete(l_name_24);
            if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, l_datetime_32, l_price_44)) Print("error: can\'t create line_object! code #", GetLastError() + l_name_24);
            ObjectSet(l_name_24, OBJPROP_RAY, FALSE);
            ObjectSet(l_name_24, OBJPROP_WIDTH, 8);
            ObjectSet(l_name_24, OBJPROP_COLOR, colorBias);
         }
         g_count_352++;
      }
      if (g_count_356 > 1) g_count_356--;
      else g_count_356 = 1;
      li_12 = TS2k_GetElement(gs_140, 3, 0, 0) - 1.0;
      while (g_count_356 < li_12) {
         if (MathAbs(TS2k_GetElement(gs_140, 3, 6, g_count_356)) == 1.0) {
            if (TS2k_GetElement(gs_140, 3, 6, g_count_356) != TS2k_GetElement(gs_140, 3, 6, g_count_356 + 1)) {
               l_datetime_32 = TS2k_GetElement(gs_140, 3, 31, g_count_356 + 1);
               ld_36 = TS2k_GetElement(gs_140, 3, 32, g_count_356 + 1);
               l_price_44 = TS2k_GetElement(gs_140, 3, 3, g_count_356);
               l_name_24 = "LineTimeDot" + g_count_356;
               if (ObjectFind(l_name_24) > -1) ObjectDelete(l_name_24);
               if (!ObjectCreate(l_name_24, OBJ_TREND, 0, l_datetime_32, l_price_44, l_datetime_32, l_price_44)) Print("error: can\'t create line_object! code #", GetLastError() + l_name_24);
               ObjectSet(l_name_24, OBJPROP_RAY, FALSE);
               ObjectSet(l_name_24, OBJPROP_WIDTH, 8);
               ObjectSet(l_name_24, OBJPROP_COLOR, colorTime);
            }
         }
         g_count_356++;
      }
      ObjectSetText(g_name_308, 
         "o=" + DoubleToStr(TS2k_GetElement(gs_140, 6, 50, -1), 0) + 
         ";f=" + DoubleToStr(TS2k_GetElement(gs_140, 6, 51, -1), 0) + 
         ";t=" + DoubleToStr(TS2k_GetElement(gs_140, 3, 6, -1), 0) +
         ";p=" + DoubleToStr(TS2k_GetElement(gs_140, 4, 6, -1), 0) + 
         "; b=" + DoubleToStr(TS2k_GetElement(gs_140, 5, 6, -1), 0) + 
         
         ";O=" + DoubleToStr(TS2k_GetElement(gs_148, 6, 50, -1), 0) + 
         ";F=" + DoubleToStr(TS2k_GetElement(gs_148, 6, 51, -1), 0) + 
         ";T=" + DoubleToStr(TS2k_GetElement(gs_148, 3, 6, -1), 0) + 
         ";P=" + DoubleToStr(TS2k_GetElement(gs_148, 4, 6, -1), 0) + 
         "; B=" + DoubleToStr(TS2k_GetElement(gs_148, 5, 6, -1), 0) + ";"
         
         , 10, "Arial", LightGray);
      li_144 = TS2k_GetElement(gs_140, 6, 51, -1);
      li_264 = TS2k_GetElement(gs_140, 6, 6, -1);      
      //---------------------
      li_268 = false;
      li_272 = false;
      //---------------------
      l_color_276 = White;
      if (li_264 > 0) l_color_276 = Green;
      if (li_264 < 0) l_color_276 = Red;
      if (li_144 > 3) {
         if (li_264 > 0 && ld_176 < 0.0) li_268 = TRUE; //exit
         if (li_264 < 0 && ld_176 > 0.0) li_268 = TRUE; //exit
         if (li_264 > 0 && ld_176 > 0.0) li_272 = TRUE; //ENTRY
         if (li_264 < 0 && ld_176 < 0.0) li_272 = TRUE; //ENTRY
      } else {
         if (li_264 > 0 && ld_176 > 0.0) li_268 = TRUE; //exit
         if (li_264 < 0 && ld_176 < 0.0) li_268 = TRUE; //exit
         if (li_264 > 0 && ld_176 < 0.0) li_272 = TRUE; //ENTRY
         if (li_264 < 0 && ld_176 > 0.0) li_272 = TRUE; //ENTRY
      }
      
      if (li_144 == 3) l_text_280 = "time";
      if (li_144 == 4) l_text_280 = "price";
      if (li_144 == 5 && li_264 > 0) { l_text_280 = "bias"; Print(" Bias, li_264=  ",  li_264);} 
      if (li_144 == 5 && li_264 < 0) {l_text_280 = "bias";Print(" Bias, li_264=  ",  li_264);}      
      ObjectSetText(g_name_316, "li_264 = " + li_264 + ", ld_176 = " +DoubleToStr(ld_176/Point, 0)+ ", small LOC = " + l_text_280, 10, "Arial", l_color_276);

     
      l_text_280 = "";
      int line_signal_color = White;
      int signal_width = 0;
      string line_name_signal = "";
      if (li_268) {l_text_280 = "EXIT.MODE" ; signal_width = 2;}
      if (li_272) {l_text_280 = "ENTRY.MODE"; signal_width = 7; }
      if (li_144 == 3) {l_text_280 = l_text_280 + " / " + "VOLATILE"; line_signal_color = Magenta;}
      if (li_144 == 4) {l_text_280 = l_text_280 + " / " + "Organized TREND"; line_signal_color = Red;}
      if (li_144 == 5 && li_264 > 0){ l_text_280 = l_text_280 + " / " + "ACCUMULATION"; line_signal_color = Yellow;}
      if (li_144 == 5 && li_264 < 0){ l_text_280 = l_text_280 + " / " + "DISTRIBUTION";  line_signal_color = PaleTurquoise;}      
      
      ObjectSetText(g_name_324, l_text_280, 10, "Arial", White);
      
      if (IsTesting() && IsVisualMode() && SmallSignal && li_144 == 3){
         if (l_text_280 != "" && signal_width != 0){
            line_name_signal = "signal_line_"+Time[0]+"_"+MathRand();
            DrawLine(line_name_signal, l_text_280, 0, 0,Low[1], High[1], line_signal_color, signal_width);
         }
      }      
      
      
      li_144 = TS2k_GetElement(gs_148, 6, 51, -1);
      li_264 = TS2k_GetElement(gs_148, 6, 6, -1);
      li_268 = false;
      li_272 = false;
      l_color_276 = White;
      if (li_264 > 0) l_color_276 = Green;
      if (li_264 < 0) l_color_276 = Red;
      if (li_144 > 3) {
         if (li_264 > 0 && ld_176 < 0.0) li_268 = TRUE;
         if (li_264 < 0 && ld_176 > 0.0) li_268 = TRUE;
         if (li_264 > 0 && ld_176 > 0.0) li_272 = TRUE;
         if (li_264 < 0 && ld_176 < 0.0) li_272 = TRUE;
      } else {
         if (li_264 > 0 && ld_176 > 0.0) li_268 = TRUE;
         if (li_264 < 0 && ld_176 < 0.0) li_268 = TRUE;
         if (li_264 > 0 && ld_176 < 0.0) li_272 = TRUE;
         if (li_264 < 0 && ld_176 > 0.0) li_272 = TRUE;
      }
      
      if (li_144 == 3) l_text_280 = "TIME";
      if (li_144 == 4) l_text_280 = "PRICE";
      if (li_144 == 5 && li_264 > 0) l_text_280 = "BIAS";
      if (li_144 == 5 && li_264 < 0) l_text_280 = "BIAS";
      ObjectSetText(g_name_332, "LARGE LOC = " + l_text_280, 10, "Arial", l_color_276);
      
      l_text_280 = "";
      line_signal_color = White;
      signal_width = 0;
      if (li_268) {l_text_280 = "EXIT.MODE" ; signal_width = 2;}
      if (li_272) {l_text_280 = "ENTRY.MODE"; signal_width = 7; }
      if (li_144 == 3) {l_text_280 = l_text_280 + " / " + "VOLATILE"; line_signal_color = Magenta;}
      if (li_144 == 4) {l_text_280 = l_text_280 + " / " + "Organized TREND"; line_signal_color = Red;}
      if (li_144 == 5 && li_264 > 0){ l_text_280 = l_text_280 + " / " + "ACCUMULATION"; line_signal_color = Yellow;}
      if (li_144 == 5 && li_264 < 0){ l_text_280 = l_text_280 + " / " + "DISTRIBUTION";  line_signal_color = PaleTurquoise;}
      
      ObjectSetText(g_name_340, l_text_280, 10, "Arial", White);
      
      if (IsTesting() && IsVisualMode() && LargeSignal){
         if (l_text_280 != "" && signal_width != 0){
            line_name_signal = "signal_line_"+Time[0]+"_"+MathRand();
            DrawLine(line_name_signal, l_text_280, 0, 0,Low[1], High[1], line_signal_color, signal_width);
         }
      }
   }
   return (0);
}

bool DrawLine(string name, string text, int shift1, int shift2, 
   double price1, double price2, color linecolor, int width, int style = STYLE_SOLID, bool ray = false){
   
   if(ObjectFind(name)<0) ObjectCreate(name, OBJ_TREND, 0, 0, 0);   
   
   ObjectSet(name, OBJPROP_TIME1, Time[shift1]); 
   ObjectSet(name, OBJPROP_TIME2, Time[shift2]);
   ObjectSet(name, OBJPROP_PRICE1, price1); 
   ObjectSet(name, OBJPROP_PRICE2, price2);         
   ObjectSet(name, OBJPROP_RAY, ray);
   ObjectSet(name, OBJPROP_COLOR, linecolor);
   ObjectSet(name, OBJPROP_WIDTH, width); 
   ObjectSet(name, OBJPROP_STYLE, style);

   ObjectSetText(name, text, 12, "Arial", Blue);       
      
   return(0);   
}