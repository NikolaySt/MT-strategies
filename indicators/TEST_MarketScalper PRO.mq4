/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2004, MetaQuotes Software Corp."
#property link      "http://www.metaquotes.net/"

#property indicator_chart_window
#property indicator_buffers 2
#property indicator_color1 Lime
#property indicator_color2 Red

int g_timeframe_76 = 0;
extern string IndieNote = "MarketScalper PRO Series";
extern int Trading_Style = 2;
extern bool Manual = FALSE;
extern int Range = 120;
extern int Sensitivity = 15;
bool gi_104 = FALSE;
int g_period_108 = 5;
int gi_112 = 20;
int gi_116 = 30;
int g_applied_price_120 = PRICE_LOW;
int g_period_124 = 55;
int gi_128 = -125;
int gi_132 = 125;
int g_applied_price_136 = PRICE_CLOSE;
bool gi_140 = false;//
int g_period_144 = 55;
int gi_148 = -90;
int gi_152 = -10;
bool gi_156 = TRUE;
int g_period_160 = 2;
int g_period_164 = 3;
int g_applied_price_168 = PRICE_CLOSE;
int g_applied_price_172 = PRICE_CLOSE;
int g_ma_method_176 = MODE_LWMA;
int g_ma_method_180 = MODE_LWMA;
int gi_184 = 0;
int gi_188 = 0;
extern bool Alert_On = TRUE;
extern bool Send_Email = FALSE;
extern string SetEmail = "Set email in Tools>Opt.>Email";
extern int Arrow_Distance = 25;
extern int ArrowType = 0;
extern int Dashboard_Corner = 1;
extern int CountBars = 35000;
extern string About = "Range scale is 0 and upwards";
extern string About2 = "Sensitivity scale is 0-100";
extern string EndNote = "====Refer to manual for help====";
extern string EndNote2 = "(c) 2010 | Build-A-Signal Software";
bool gi_unused_256 = TRUE;
double gd_260;
double gd_268;
double gd_276;
double gd_284;
double g_ibuf_292[];
double g_ibuf_296[];
int gi_300 = 0;
int g_bars_304 = 0;

int init() {
   string ls_unused_4;
   if (ArrowType == 0) {
      SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
      SetIndexBuffer(0, g_ibuf_292);
      SetIndexEmptyValue(0, 0);
      SetIndexArrow(0, 233);
      SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
      SetIndexBuffer(1, g_ibuf_296);
      SetIndexEmptyValue(1, 0);
      SetIndexArrow(1, 234);
   } else {
      if (ArrowType == 1) {
         SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
         SetIndexBuffer(0, g_ibuf_292);
         SetIndexEmptyValue(0, 0);
         SetIndexArrow(0, 225);
         SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
         SetIndexBuffer(1, g_ibuf_296);
         SetIndexEmptyValue(1, 0);
         SetIndexArrow(1, 226);
      } else {
         if (ArrowType == 2) {
            SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
            SetIndexBuffer(0, g_ibuf_292);
            SetIndexEmptyValue(0, 0);
            SetIndexArrow(0, SYMBOL_ARROWUP);
            SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
            SetIndexBuffer(1, g_ibuf_296);
            SetIndexEmptyValue(1, 0);
            SetIndexArrow(1, SYMBOL_ARROWDOWN);
         } else {
            if (ArrowType == 3) {
               SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
               SetIndexBuffer(0, g_ibuf_292);
               SetIndexEmptyValue(0, 0);
               SetIndexArrow(0, 221);
               SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
               SetIndexBuffer(1, g_ibuf_296);
               SetIndexEmptyValue(1, 0);
               SetIndexArrow(1, 222);
            } else {
               if (ArrowType == 4) {
                  SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
                  SetIndexBuffer(0, g_ibuf_292);
                  SetIndexEmptyValue(0, 0);
                  SetIndexArrow(0, 217);
                  SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
                  SetIndexBuffer(1, g_ibuf_296);
                  SetIndexEmptyValue(1, 0);
                  SetIndexArrow(1, 218);
               } else {
                  if (ArrowType == 5) {
                     SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
                     SetIndexBuffer(0, g_ibuf_292);
                     SetIndexEmptyValue(0, 0);
                     SetIndexArrow(0, 228);
                     SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
                     SetIndexBuffer(1, g_ibuf_296);
                     SetIndexEmptyValue(1, 0);
                     SetIndexArrow(1, 230);
                  } else {
                     if (ArrowType == 6) {
                        SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
                        SetIndexBuffer(0, g_ibuf_292);
                        SetIndexEmptyValue(0, 0);
                        SetIndexArrow(0, 236);
                        SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
                        SetIndexBuffer(1, g_ibuf_296);
                        SetIndexEmptyValue(1, 0);
                        SetIndexArrow(1, 238);
                     } else {
                        if (ArrowType == 7) {
                           SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
                           SetIndexBuffer(0, g_ibuf_292);
                           SetIndexEmptyValue(0, 0);
                           SetIndexArrow(0, 246);
                           SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
                           SetIndexBuffer(1, g_ibuf_296);
                           SetIndexEmptyValue(1, 0);
                           SetIndexArrow(1, 248);
                        } else {
                           if (ArrowType == 8) {
                              SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
                              SetIndexBuffer(0, g_ibuf_292);
                              SetIndexEmptyValue(0, 0);
                              SetIndexArrow(0, SYMBOL_THUMBSUP);
                              SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
                              SetIndexBuffer(1, g_ibuf_296);
                              SetIndexEmptyValue(1, 0);
                              SetIndexArrow(1, SYMBOL_THUMBSDOWN);
                           } else {
                              if (ArrowType == 9) {
                                 SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
                                 SetIndexBuffer(0, g_ibuf_292);
                                 SetIndexEmptyValue(0, 0);
                                 SetIndexArrow(0, 71);
                                 SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
                                 SetIndexBuffer(1, g_ibuf_296);
                                 SetIndexEmptyValue(1, 0);
                                 SetIndexArrow(1, 72);
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   }
   gd_276 = 0;
   gd_284 = 0;
   switch (g_timeframe_76) {
   case PERIOD_M1:
      ls_unused_4 = "Period_M1";
      break;
   case PERIOD_M5:
      ls_unused_4 = "Period_M5";
      break;
   case PERIOD_M15:
      ls_unused_4 = "Period_M15";
      break;
   case PERIOD_M30:
      ls_unused_4 = "Period_M30";
      break;
   case PERIOD_H1:
      ls_unused_4 = "Period_H1";
      break;
   case PERIOD_H4:
      ls_unused_4 = "Period_H4";
      break;
   case PERIOD_D1:
      ls_unused_4 = "Period_D1";
      break;
   case PERIOD_W1:
      ls_unused_4 = "Period_W1";
      break;
   case PERIOD_MN1:
      ls_unused_4 = "Period_MN1";
      break;
   default:
      ls_unused_4 = "Current Timeframe";
      SetStepTF_Up();
   }
   string ls_12 = "MarketScalper PRO Series";
   string ls_20 = ls_12;
   ls_20 = ls_20 + "  (" + g_timeframe_76;
   ls_20 = ls_20 + ")";
   ls_20 = ls_20 + "( ";
   ls_20 = ls_20 + " " + DoubleToStr(g_period_108, 0);
   ls_20 = ls_20 + ")  ";
   IndicatorShortName(ls_20);
   return (0);
}

int start() {
   string ls_4;
   int li_12;
   int li_unused_16;
   int l_ind_counted_20;
   string ls_24;
   int l_shift_36;
   int l_str2time_40;
   int l_period_44;
   int l_period_48;
   int l_slowing_52;
   int li_56;
   int li_60;
   int l_price_field_64;
   int l_ma_method_68;
   int li_72;
   double l_icci_76;
   string ls_84;
   double l_irsi_92;
   string ls_unused_100;
   string ls_108;
   string ls_116;
   double l_istochastic_124;
   double l_istochastic_132;
   double l_istochastic_140;
   double l_iwpr_148;
   string ls_unused_156;
   string ls_unused_164;
   double l_ima_172;
   double l_ima_180;
   string ls_188;
   int l_str2time_196;
   int l_str2time_200;
   int li_0 = 1301788800;
   if (TimeCurrent() > li_0) {
      ObjectCreate("InvLic", OBJ_LABEL, 0, 0, 0);
      ObjectSetText("InvLic", "MarketScalper PRO v1.7", 10, "Arial Bold", DodgerBlue);
      ObjectSet("InvLic", OBJPROP_CORNER, Dashboard_Corner);
      ObjectSet("InvLic", OBJPROP_XDISTANCE, 5);
      ObjectSet("InvLic", OBJPROP_YDISTANCE, 3);
      //return (0);
   }
   //if (TimeCurrent() < li_0) {
      ls_4 = "2011.";
      if (g_bars_304 == Bars) return (0);
      g_bars_304 = Bars;
      li_unused_16 = 0;
      l_ind_counted_20 = IndicatorCounted();
      ls_24 = "01.05";
      li_12 = Bars - l_ind_counted_20 + g_timeframe_76 / Period();
      if (l_ind_counted_20 > 0) li_12++;
      else
         if (li_12 > 100) li_12 = CountBars;
      SetIndexDrawBegin(0, Bars - CountBars);
      SetIndexDrawBegin(1, Bars - CountBars);
      for (int li_32 = CountBars; li_32 > 0; li_32--) {
         l_str2time_40 = StrToTime(ls_4 + ls_24);
         l_shift_36 = iBarShift(NULL, g_timeframe_76, Time[li_32], FALSE);
         g_ibuf_292[li_32] = EMPTY_VALUE;
         g_ibuf_296[li_32] = EMPTY_VALUE;
         //if (TimeCurrent() > l_str2time_40) return (0);
         //if (TimeCurrent() < l_str2time_40) {
            if (Trading_Style == 1 && Manual == FALSE) {
               l_period_44 = 89;
               l_period_48 = 16;
               l_slowing_52 = 1;
               li_56 = 15;
               li_60 = 85;
               l_price_field_64 = 0;
               l_ma_method_68 = 0;
               li_72 = 1;
               l_icci_76 = iCCI(NULL, g_timeframe_76, g_period_124, g_applied_price_136, l_shift_36);
            } else {
               if (Trading_Style == 2 && Manual == FALSE) {
                  l_period_44 = 89;
                  l_period_48 = 5;
                  l_slowing_52 = 1;
                  li_56 = 15;
                  li_60 = 85;
                  l_price_field_64 = 0;
                  l_ma_method_68 = 0;
                  li_72 = 1;
                  l_icci_76 = iCCI(NULL, g_timeframe_76, g_period_124, g_applied_price_136, l_shift_36);
               } else {
                  if (Trading_Style == 3 && Manual == FALSE) {
                     l_period_44 = 0;
                     l_period_48 = 0;
                     l_slowing_52 = 0;
                     li_56 = 0;
                     li_60 = 0;
                     l_price_field_64 = 0;
                     l_ma_method_68 = 0;
                     li_72 = 1;
                     l_icci_76 = iCCI(NULL, g_timeframe_76, g_period_124, g_applied_price_136, l_shift_36);
                     gi_128 = -125;
                     gi_132 = 125;
                  } else {
                     if (Trading_Style >= 0 && Manual == TRUE) {
                        l_period_44 = Range;
                        l_period_48 = Range / 10;
                        l_slowing_52 = 1;
                        li_56 = Sensitivity;
                        li_60 = 100 - Sensitivity;
                        l_price_field_64 = 0;
                        l_ma_method_68 = 0;
                        li_72 = 1;
                        l_icci_76 = 0;
                        gi_128 = 0;
                        gi_132 = 0;
                     }
                  }
               }
            }
            ls_84 = ".11";
            if (gi_104 == TRUE) {
               l_irsi_92 = iRSI(NULL, g_timeframe_76, g_period_108, g_applied_price_120, l_shift_36);
               ls_unused_100 = "RSI  ";
            } else {
               if (gi_104 == FALSE) {
                  l_irsi_92 = 0;
                  gi_112 = FALSE;
                  gi_116 = FALSE;
               }
            }
            ls_108 = "11";
            ls_116 = ".5";
            l_istochastic_124 = iStochastic(NULL, g_timeframe_76, l_period_44, l_period_48, l_slowing_52, l_ma_method_68, l_price_field_64, li_72, l_shift_36);
            l_istochastic_132 = iStochastic(NULL, g_timeframe_76, l_period_44, l_period_48, l_slowing_52, l_ma_method_68, l_price_field_64, MODE_MAIN, l_shift_36);
            l_istochastic_140 = iStochastic(NULL, g_timeframe_76, l_period_44, l_period_48, l_slowing_52, l_ma_method_68, l_price_field_64, MODE_SIGNAL, l_shift_36);
            if (gi_140 == TRUE) {
               l_iwpr_148 = iWPR(NULL, g_timeframe_76, g_period_144, l_shift_36);
               ls_unused_156 = "WPR";
            } else {
               if (gi_140 == FALSE) {
                  l_iwpr_148 = 0;
                  gi_148 = FALSE;
                  gi_152 = FALSE;
               }
            }
            if (gi_156 == TRUE) {
               ls_unused_164 = "2MA  ";
               l_ima_172 = iMA(NULL, g_timeframe_76, g_period_160, gi_184, g_ma_method_176, g_applied_price_168, l_shift_36);
               l_ima_180 = iMA(NULL, g_timeframe_76, g_period_164, gi_188, g_ma_method_180, g_applied_price_172, l_shift_36);
            } else {
               if (gi_156 == FALSE) {
                  l_ima_172 = 0;
                  l_ima_180 = 0;
               }
            }
            ls_188 = "20";
         //}
         ObjectCreate("TitleText", OBJ_LABEL, 0, 0, 0);
         ObjectSetText("TitleText", "MarketScalper PRO v1.7", 10, "Arial Bold", Red);
         ObjectSet("TitleText", OBJPROP_CORNER, Dashboard_Corner);
         ObjectSet("TitleText", OBJPROP_XDISTANCE, 5);
         ObjectSet("TitleText", OBJPROP_YDISTANCE, 3);
         l_str2time_196 = StrToTime(ls_188 + ls_108 + ls_84 + ls_116);
         if (Manual == FALSE && Trading_Style == 0 || Trading_Style == 1) {
            ObjectCreate("LoadedInd", OBJ_LABEL, 0, 0, 0);
            ObjectSetText("LoadedInd", "MODE: HIGH PROBABILITY", 8, "Arial", DodgerBlue);
            ObjectSet("LoadedInd", OBJPROP_CORNER, Dashboard_Corner);
            ObjectSet("LoadedInd", OBJPROP_XDISTANCE, 5);
            ObjectSet("LoadedInd", OBJPROP_YDISTANCE, 20);
         }
         if (Manual == FALSE && Trading_Style == 2) {
            ObjectCreate("LoadedInd2", OBJ_LABEL, 0, 0, 0);
            ObjectSetText("LoadedInd2", "MODE: BALANCED", 8, "Arial", Yellow);
            ObjectSet("LoadedInd2", OBJPROP_CORNER, Dashboard_Corner);
            ObjectSet("LoadedInd2", OBJPROP_XDISTANCE, 5);
            ObjectSet("LoadedInd2", OBJPROP_YDISTANCE, 20);
         }
         if (Manual == FALSE && Trading_Style == 3) {
            ObjectCreate("LoadedInd3", OBJ_LABEL, 0, 0, 0);
            ObjectSetText("LoadedInd3", "MODE: AGGRESSIVE", 8, "Arial", Red);
            ObjectSet("LoadedInd3", OBJPROP_CORNER, Dashboard_Corner);
            ObjectSet("LoadedInd3", OBJPROP_XDISTANCE, 5);
            ObjectSet("LoadedInd3", OBJPROP_YDISTANCE, 20);
         }
         l_str2time_200 = StrToTime(ls_188 + ls_108 + ls_84 + ls_116);
         if (Manual == TRUE && Trading_Style > 0) {
            ObjectCreate("LoadedInd4", OBJ_LABEL, 0, 0, 0);
            ObjectSetText("LoadedInd4", "MANUAL MODE  |  RANGE: " + Range + "  SENSITIVITY: " + Sensitivity, 8, "Arial", LimeGreen);
            ObjectSet("LoadedInd4", OBJPROP_CORNER, Dashboard_Corner);
            ObjectSet("LoadedInd4", OBJPROP_XDISTANCE, 5);
            ObjectSet("LoadedInd4", OBJPROP_YDISTANCE, 20);
         }
         //if (TimeCurrent() > l_str2time_200) return (0);
         //if (TimeCurrent() < l_str2time_200) {
            if (l_irsi_92 <= gi_112 && l_icci_76 <= gi_128 && (l_istochastic_132 >= l_istochastic_140 && l_istochastic_124 <= li_56) && l_iwpr_148 <= gi_148 && l_ima_172 >= l_ima_180) {
               gd_260 = 1;
               gd_268 = 0;
            }
            if (l_irsi_92 >= gi_116 && l_icci_76 >= gi_132 && (l_istochastic_132 <= l_istochastic_140 && l_istochastic_124 >= li_60) && l_iwpr_148 >= gi_152 && l_ima_172 <= l_ima_180) {
               gd_260 = 0;
               gd_268 = 1;
            }
         //}
         if (gd_276 == 0.0 && gd_260 == 1.0) {
            g_ibuf_292[li_32] = Low[li_32] - Arrow_Distance * Point;
            gd_276 = 1;
            gd_284 = 0;
         }
         if (gd_284 == 0.0 && gd_268 == 1.0) {
            g_ibuf_296[li_32] = High[li_32] + Arrow_Distance * Point;
            gd_284 = 1;
            gd_276 = 0;
         }
         if (gd_276 == 1.0 && gd_260 != 1.0) {
            gd_276 = 0;
            gd_284 = 0;
         }
         if (gd_284 == 1.0 && gd_268 != 1.0) {
            gd_276 = 0;
            gd_284 = 0;
         }
      }
      if (Alert_On) ProcessAlert();
      //return (0);
   //}
   return (0);
}

void SetValues60(int ai_0) {
   g_timeframe_76 = ai_0;
}

void SetStepTF_Up() {
   switch (Period()) {
   case PERIOD_M1:
      SetValues60(1);
      return;
   case PERIOD_M5:
      SetValues60(5);
      return;
   case PERIOD_M15:
      SetValues60(15);
      return;
   case PERIOD_M30:
      SetValues60(30);
      return;
   case PERIOD_H1:
      SetValues60(60);
      return;
   case PERIOD_H4:
      SetValues60(240);
      return;
   case PERIOD_D1:
      SetValues60(1440);
      return;
   case PERIOD_W1:
      SetValues60(10080);
      return;
   case PERIOD_MN1:
      SetValues60(43200);
      return;
      return;
   }
}

void ProcessAlert() {
   if (g_ibuf_292[1] != EMPTY_VALUE && gi_300 != Time[0]) {
      Alert("MarketScalper PRO: " + Symbol() + " M(" + Period() + ") at ", TimeToStr(TimeLocal(), TIME_SECONDS), " - BUY");
      PlaySound("alert2.wav");
      gi_300 = Time[0];
      /*
      if (Send_Email == TRUE) {
         SendMail("MarketScalper Alert!", Symbol() + " M(" + Period() + ") - BUY  signal issued at " + TimeToStr(TimeLocal(), TIME_SECONDS) + " on " + TimeToStr(TimeCurrent(), TIME_DATE) +
            "\r\n \r\n Delivered via MarketScalper Pro");
      }
      */
   }
   if (g_ibuf_296[1] != EMPTY_VALUE && gi_300 != Time[0]) {
      Alert("MarketScalper PRO: " + Symbol() + " M(" + Period() + ") at ", TimeToStr(TimeLocal(), TIME_SECONDS), " - SELL");
      PlaySound("alert2.wav");
      gi_300 = Time[0];
      /*
      if (Send_Email == TRUE) {
         SendMail("MarketScalper Alert!", Symbol() + " M(" + Period() + ") - SELL signal issued at " + TimeToStr(TimeLocal(), TIME_SECONDS) + " on " + TimeToStr(TimeCurrent(), TIME_DATE) +
            "\r\n \r\n Delivered via MarketScalper Pro");
      }
      */
   }
}

void deinit() {
   ObjectDelete("TitleText");
   ObjectDelete("LoadedInd");
   ObjectDelete("LoadedInd2");
   ObjectDelete("LoadedInd3");
   ObjectDelete("LoadedInd4");
   ObjectDelete("InvLic");
   ObjectDelete("InvLic2");
   ObjectDelete("InvLic3");
   ObjectDelete("InvLic4");
}